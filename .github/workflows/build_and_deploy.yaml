name: Build and Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup SWIG
        uses: mmomtchev/setup-swig@v4
        with:
          branch: jse

      - name: Verify SWIG
        run: swig -version
    
      - name: Set up Python for cibuildwheel
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22
        with:
          output-dir: wheelhouse
        env:
          # CIBW_BEFORE_BUILD_LINUX is powerful but let's simplify again
          # if the issue is FindPython not getting correct hints from scikit-build-core.
          # The key is to pass the explicit Python paths to CMake via CIBW_CMAKE_OPTIONS.
          # CIBW_BEFORE_BUILD_LINUX: |
          #   set -x
          #   export PYTHON_ROOT_DIR="$(dirname "$(dirname "$PYTHON_BIN")")"
          #   export Python3_ROOT_DIR="$PYTHON_ROOT_DIR"
          #   export Python3_INCLUDE_DIR="$PYTHON_INCLUDE_DIR"
          #   export Python3_LIBRARY="$PYTHON_LIB"
          #   echo "DEBUG: PYTHON_ROOT_DIR set to: $PYTHON_ROOT_DIR"
          #   echo "DEBUG: Python3_INCLUDE_DIR set to: $Python3_INCLUDE_DIR"
          #   echo "DEBUG: Python3_LIBRARY set to: $Python3_LIBRARY"
          #   true

          # Crucial: Directly pass Python include and library paths to CMake
          # These variables ($PYTHON_INCLUDE_DIR, $PYTHON_LIB) are provided by cibuildwheel
          # and point to the Python environment cibuildwheel sets up for the build.
          # FindPython will explicitly use these if provided.
          CIBW_CMAKE_OPTIONS: >
            -DPython_INCLUDE_DIRS="$PYTHON_INCLUDE_DIR"
            -DPython_LIBRARIES="$PYTHON_LIB"
            -DPython3_INCLUDE_DIRS="$PYTHON_INCLUDE_DIR" # For Python 3 specific FindPython calls
            -DPython3_LIBRARIES="$PYTHON_LIB" # For Python 3 specific FindPython calls
          
          CIBW_SKIP: pp* cp36* cp37* cp38* *-win32 *-manylinux_i686 *-musllinux_*
          
          MACOSX_DEPLOYMENT_TARGET: 14

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-wheelhouse
          path: wheelhouse

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up environment
        run: |
          python -m pip install scikit-build-core build

      - name: Build and check sdist
        run: |
          python -m build --sdist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: sourcedist

  deploy:
    runs-on: ubuntu-latest
    needs: [build-wheel, build-sdist]
    if: ${{ startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch' }}
    environment: deployment
    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.3
