name: Build and Deploy

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup SWIG
        uses: mmomtchev/setup-swig@v4
        with:
          branch: jse

      - name: Verify SWIG
        run: swig -version
    
      - name: Set up Python for cibuildwheel
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22
        with:
          output-dir: wheelhouse
        env:
          # CIBW_ENVIRONMENT_LINUX is for simple key-value pairs.
          # For dynamic paths using shell commands, use CIBW_ENVIRONMENT_SCRIPT.
          # CIBW_ENVIRONMENT_LINUX: >
          #   Python_ROOT_DIR="$(dirname $(dirname "$PYTHON_BIN"))"
          #   Python3_ROOT_DIR="$(dirname $(dirname "$PYTHON_BIN"))"
          
          # Use CIBW_ENVIRONMENT_SCRIPT to correctly derive and set environment variables.
          # This command will be executed in the shell inside the container.
          CIBW_ENVIRONMENT_SCRIPT_LINUX: |
            export PYTHON_ROOT_DIR="$(dirname "$(dirname "$PYTHON_BIN")")"
            export Python3_ROOT_DIR="$PYTHON_ROOT_DIR"
            echo "PYTHON_ROOT_DIR set to: $PYTHON_ROOT_DIR" # For debugging
            # Also try setting the explicit include/library paths in case ROOT_DIR isn't enough
            export Python3_INCLUDE_DIR="$PYTHON_INCLUDE_DIR"
            export Python3_LIBRARY="$PYTHON_LIB"
            echo "Python3_INCLUDE_DIR set to: $Python3_INCLUDE_DIR" # For debugging
            echo "Python3_LIBRARY set to: $Python3_LIBRARY" # For debugging

          # CIBW_CMAKE_OPTIONS can still be useful for other CMake flags,
          # but the Python path setting should now happen via ENVIRONMENT_SCRIPT
          # CIBW_CMAKE_OPTIONS: >
          #   -DPython3_INCLUDE_DIR="$PYTHON_INCLUDE_DIR"
          #   -DPython3_LIBRARY="$PYTHON_LIB"
          
          CIBW_SKIP: pp* cp36* cp37* cp38* *-win32 *-manylinux_i686 *-musllinux_*
          
          MACOSX_DEPLOYMENT_TARGET: 14

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-wheelhouse
          path: wheelhouse

  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up environment
        run: |
          python -m pip install scikit-build-core build

      - name: Build and check sdist
        run: |
          python -m build --sdist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          name: sourcedist

  deploy:
    runs-on: ubuntu-latest
    needs: [build-wheel, build-sdist]
    if: ${{ startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch' }}
    environment: deployment
    permissions:
      id-token: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.3
